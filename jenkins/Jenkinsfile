def BUCKET_NAME 
def WAR_FILE_NAME = "Build${BUILD_NUMBER}_vprofile-v2.war"
pipeline {
 agent any
 tools {
  terraform 'TerraformDefault'
  maven 'MavenDefault'
 }
 // Define environment variables for credentials
 environment {
  TF_VAR_aws_access_key = credentials('AWSAccessKey')
  TF_VAR_aws_secret_key = credentials('AWSSecretKey')
  TF_VAR_elastic_token = credentials('Elastic_token')
 }
 stages {
  stage('Maven') {
    steps {
      // Change to the 'application' directory and run 'maven commands'
      dir('vprofile') {
       script {
        sh """
         mvn clean install
        """
        }
      }
    }
  }
  stage('Terraform') {
    steps {
      // Change to the 'terraform' directory and run 'terraform commands'
      dir('terraform') {
       script {
        sh """
         terraform init
         terraform plan -var-file=variables.tfvars -var 'war_file_name=${WAR_FILE_NAME}'
         terraform apply -auto-approve -var-file=variables.tfvars -var 'war_file_name=${WAR_FILE_NAME}'
        """
        BUCKET_NAME = sh(returnStdout: true, script: "terraform output bucket_name").trim()
       }
      }
    }
  }
  stage('Download Elastic APM Agent') {
   steps {
    sh "curl -o 'elastic-apm-agent.jar' -L 'https://oss.sonatype.org/service/local/artifact/maven/redirect?r=releases&g=co.elastic.apm&a=elastic-apm-agent&v=LATEST'"
   }
  }
  stage('Upload artifacts to S3 bucket') {
   steps {
    withAWS(credentials: 'AWSKey') {
     // Upload Elastic Agent
     sh "aws s3 cp elastic-apm-agent.jar s3://${BUCKET_NAME}/elastic-apm-agent.jar"
     // Upload .war
     sh "aws s3 cp vprofile/target/vprofile-v2.war s3://${BUCKET_NAME}/${WAR_FILE_NAME}"
    }
   }
  }
 }
}




